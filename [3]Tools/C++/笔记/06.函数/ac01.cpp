/*

实参是形参的初始值。第一个实参初始化第一个形参，第二个实参初始化第二个形参，依次类推。形参和实参的类型和个数必须匹配。
fact(“hello”);		// 错误：实参类型不正确
fact(); 			// 错误：实参数量不足
fact(42, 10, 0); 	// 错误：实参数量过多
fact(3.14); 		// 正确：该实参能转换成int类型，等价于fact(3);

形参也可以设置默认值，但所有默认值必须是最后几个。当传入的实参个数少于形参个数时，最后没有被传入值的形参会使用默认值。

大多数类型都能用作函数的返回类型。
一种特殊的返回类型是void，它表示函数不返回任何值。
函数的返回类型不能是数组类型或函数类型，但可以是指向数组或者函数的指针。

*/

// 当函数的形参为引用类型时，对形参的修改会影响实参的值。使用引用的作用：避免拷贝、让函数返回额外信息。
#include<iostream>
using namespace std;

void f(int &x){
    x = 5;
}

int main(){

    int x = 10;

    f(x);
    cout << x << endl;

    return 0;
    
}